deploymentStrategy:
  type: RollingUpdate  # Can be "Recreate" or "RollingUpdate"

image:
  repository: ghcr.io/music-assistant/server
  tag: ""
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  ports:
    web:
      port: 80
      targetPort: 8095
    devices:
      port: 8097
      targetPort: 8097

hostNetwork: false  # Set to true to enable host networking

oauth2Proxy:
  enabled: false  # Set to true to enable OAuth2 Proxy
  image:
    repository: quay.io/oauth2-proxy/oauth2-proxy
    tag: v7.9.0
    pullPolicy: IfNotPresent
  config:
    provider: oidc
    providerDisplayName: "Authentik"
    skipProviderButton: true
    passAuthorizationHeader: true
    setAuthorizationHeader: true
    oidcIssuerURL: "oidc-issuer-url"
    redirectURL: "redirect-url"
    sessionStoreType: cookie
    cookieRefresh: 119m
    clientID: ""
    clientSecret: ""
    cookieSecret: ""
  secretRef: ""  # Set to an existing Kubernetes Secret name if secrets should be used
  ingress:
    hostname: music-assistant.local
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # external-dns.alpha.kubernetes.io/hostname: music-assistant.example.com
    tls:
      enabled: false
      secretName: music-assistant-tls
      # If secretName is not specified, a secret will be generated by cert-manager if using annotations
      # cert-manager.io/cluster-issuer: letsencrypt

persistence:
  enabled: true
  size: 10Gi
  mountPath: /data
  accessMode: ReadWriteOnce
  storageClass: "" 