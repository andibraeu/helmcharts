# Default values for ohcloud.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

openhabcloudApp:
  replicaCount: 1
  image:
    repository: docker.io/openhab/openhab-cloud
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    enabled: true
    type: ClusterIP
    port: 3000

  env:
    - name: "DOMAIN_NAME"
      value: ""
    - name: "EXPRESS_KEY"
      value: ""
    - name: "APN_PASSPHRASE"
      value: ""
    - name: "GCM_PASSWORD"
      value: ""
    - name: "MONGODB_URI"
      value: ""
    - name: "MONGODB_DB"
      value: ""
    - name: "MONGODB_USER"
      value: ""
    - name: "MONGODB_PASS"
      value: ""
    - name: "REDIS_HOST"
      value: ""
    - name: "REDIS_PASSWORD"
      value: ""
    - name: "MAIL_USER"
      value: ""
    - name: "MAIL_PASSWORD"
      value: ""
    - name: "MAIL_FROM"
      value: ""

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  # Additional volumes on the output Deployment definition.
  volumes: []

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

  serviceAccount:
  # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

redis:
  enabled: false
  architecture: standalone
  auth:
    enabled: false
  master:
    persistence:
      size: 1Gi  

mongodb:
  enabled: false
  architecture: standalone
  useStatefulSet: false
  auth:
    enabled: false
    rootUser: root
    rootPassword: ""
    usernames: []
    passwords: []
    databases: []
    existingSecret: "" # use this to define password in a secret for users and root
  persistence:
    enabled: true
    name: "datadir"
    size: 8Gi
    annotations: {}
    mountPath: /bitnami/mongodb

